generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model Account {
  id                Int     @id @default(autoincrement())
  userId            Int
  type              String  @db.VarChar(255)
  provider          String  @db.VarChar(255)
  providerAccountId String  @db.VarChar(255)
  refresh_token     String?
  access_token      String?
  expires_at        BigInt?
  id_token          String?
  scope             String?
  session_state     String?
  token_type        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Gate {
  id           Int            @id @default(autoincrement())
  name         String?        @db.VarChar(255)
  entity_id    String?        @db.VarChar(255)
  gates_access GatesAccess[]

  @@map("gates")
}

model GatesAccess {
  gate_id Int   @default(autoincrement())
  user_id Int   @default(autoincrement())
  gates   Gate @relation(fields: [gate_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users   User @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([gate_id, user_id])
  @@map("gates_access")
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int
  expires      DateTime @db.Timestamptz(6)
  sessionToken String   @db.VarChar(255)

  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            Int            @id @default(autoincrement())
  name          String?        @db.VarChar(255)
  email         String?        @db.VarChar(255)
  emailVerified DateTime?      @db.Timestamptz(6)
  image         String?
  
  gates_access  GatesAccess[]
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

model VerificationToken {
  identifier String
  expires    DateTime @db.Timestamptz(6)
  token      String

  @@id([identifier, token])
  @@map("verification_token")
}
